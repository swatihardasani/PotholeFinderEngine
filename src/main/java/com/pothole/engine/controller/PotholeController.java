package com.pothole.engine.controller;

import com.pothole.engine.respository.PotholeEvent;
import com.pothole.engine.respository.PotholeEventRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/api/pothole/v1") // This means URL's start with /pothole (after Application path)
public class PotholeController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private PotholeEventRepository potholeEventRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewPotholeEvent (@RequestParam long userId,
                                                    @RequestParam double latitude,
                                                    @RequestParam double longitude,
                                                    @RequestParam double depth) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        PotholeEvent potholeEvent = new PotholeEvent();
        potholeEvent.setLatitude(latitude);
        potholeEvent.setLongitude(longitude);
        potholeEvent.setDepth(depth);
        potholeEvent.setUserId(userId);

        potholeEventRepository.save(potholeEvent);
        return "Saved";
    }

    @GetMapping(path="/get")
    public @ResponseBody Iterable<PotholeEvent> getNearByPotholes(@RequestParam double latitude,
                                                                  @RequestParam double longitude) {
        // This returns a JSON or XML with the users
        return potholeEventRepository.findAll();
    }

//    @GetMapping(path="/all")
//    public @ResponseBody Iterable<PotholeEvent> getAllEvents() {
//        // This returns a JSON or XML with the users
//        return potholeEventRepository.findAll();
//    }

    @GetMapping(path="/get")
    public @ResponseBody Iterable<PotholeEvent> getAllEvents() {
        // This returns a JSON or XML with the users
        return potholeEventRepository.findAll();
    }
}